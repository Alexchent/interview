<?php/** * 装饰器模式 * * 对现有对象的增加功能 * * 比如菜品增加一个口味 * * 装饰器不改变原有接口，仅用于原功能的增强或增加新功能，体现了【开放封闭原则】 * *///商品interface Goods {    public function getPrice();}//食物类商品class Food implements Goods {    public function getPrice()    {        return 20;    }}class TasteFood implements Goods {    private $goods;    public function __construct(Goods $goods)    {        $this->goods = $goods;    }    public function getPrice()    {        return $this->goods->getPrice() + 2;    }}$food = new Food();echo "食物原价：".$food->getPrice().PHP_EOL;$tasteFood = new TasteFood(new Food());echo "增加口味的食物价格：".$tasteFood->getPrice().PHP_EOL;