<?php/** * 行为型模式 * * 中介模式 对个对象之间互相关联，成网状关系，为了降低耦合度，让这些对象通过一个中介对象交互 * * 优点：降低耦合度 * 副作用：由于它将所有的职责都移到了中介者类中，也就是说中介类需要处理所有类之间的协调工作， * 这可能会使中介者演变成一个超级类。所以使用中介者模式时需要权衡利弊。 */class Group {    public $money;}class Player {    public $money = 100;    public function change(Group $group, int $money) {        //输钱的人        $group->money += $money;        //自己的余额增加        $this->money += $money;    }}//4一个玩家一起玩游戏，只有一个赢家$player1 = new Player();$player2 = new Player();$player3 = new Player();$player4 = new Player();$group = new Group();$player4->change($group, -10);$player2->change($group, -8);$player3->change($group, -20);$player1->change($group, 38);echo "1号玩家的余额：".$player1->money.PHP_EOL;echo "2号玩家的余额：".$player2->money.PHP_EOL;echo "3号玩家的余额：".$player3->money.PHP_EOL;echo "4号玩家的余额：".$player4->money.PHP_EOL;